let Client = require('ssh2').Client
let path = require('path')
let fs = require('fs')
let conn = new Client()
require('dotenv').config()

module.exports = function () {
  let fileName = process.env.park_name
  if (!fileName && !/tar.gz$/.test(fileName)) {
    throw new Error('补丁名字错误：' + fileName)
  }
  conn.on('ready', function () {
    conn.sftp(function (err, sftp) {
      if (err) throw err
      let parkPath = path.resolve(process.env.build_path + '/' + fileName)
      if (fs.existsSync(parkPath)) {
        fs.readFile(parkPath, function (err, data) {
          if (err) throw err
          let filePath = process.env.sftp_project_path
          mkdirs(sftp, filePath, function () {
            sftp.writeFile(filePath + '/' + fileName, data, function (err, res) {
              if (err) throw new Error('服务器不存在目录：' + filePath)
              unzipFile(filePath, fileName)
            })
          })
        })
      } else {
        console.log(parkPath)
        throw new Error('没有找到补丁')
      }
    })
  }).connect({
    host: process.env.host,
    port: process.env.port,
    username: process.env.username,
    password: process.env.password
  })
}

function unzipFile (path, fileName) {
  conn.exec('cd ' + path + '; tar -xzvf ' + fileName + '; rm ' + fileName, function (err, stream) {
    if (err) throw err
    stream.on('close', function (code, signal) {
      console.log('Stream 1:: close :: code: ' + code + ', signal: ' + signal)
      conn.end()
    }).on('data', function (data) {
      console.log(data + '')
    }).stderr.on('data', function (data) {
      console.log('STDERR1: ' + data)
    })
  })
}

function mkdirs (sftp, dirname, callback) {
  sftp.exists(dirname, function (exists) {
    if (exists) {
      callback()
    } else {
      mkdirs(sftp, path.dirname(dirname), function () {
        sftp.mkdir(dirname, callback)
      })
    }
  })
}
