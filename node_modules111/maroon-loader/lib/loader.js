var parser = require('./import-parser.js')
const utils = require('loader-utils')
const path = require('path')

function resolve (dir) {
  return path.join(__dirname, '../..', dir)
}

module.exports = function(source){
  if (!this.query || typeof this.query !== 'object') {
    return source
  }
  const loaderContext = this
  const cb = this.async()
  const moduleName = this.query.name || 'maroon'
  const path = this.query.path
  const mode = this.query.mode
  source = parser(source, function(opts){
    let str = ''
    opts.components.forEach(function (component) {
      let name = component.newName;
      let name2 = name.substr(0, 1).toLowerCase() + name.substr(1).replace(/[A-Z]/g, function(item){return '-'+item.toLowerCase()});
      if (mode !== 'dev') {
        let relativePath = utils.stringifyRequest(loaderContext, resolve(`${path}/${name2}`))
        str += `import ${name} from ${relativePath}\n`
      }
      else {
        str += `import ${name} from '${moduleName}/${name2}'\n`
      }
    })
    return str
  }, moduleName)
  cb(null, source)
}
